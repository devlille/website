---
import { getCollection } from "astro:content";

const allVideos = await getCollection("youtubeVideos");

// Sélectionner 3 vidéos aléatoires
const shuffled = [...allVideos].sort(() => 0.5 - Math.random());
const randomVideos = shuffled.slice(0, 3);
---

{randomVideos.length > 0 && (
  <div class="youtube-videos">
    <h2>Revivez les <strong>éditions précédentes</strong></h2>
    <div class="videos-grid">
      {randomVideos.map((video) => (
        <figure class="video-card">
          <div class="video-container" data-video-id={video.data.videoId}>
            <img
              src={video.data.thumbnailUrl}
              alt={video.data.title}
              class="video-thumbnail">
            <button class="play-button" aria-label={`Lire la vidéo: ${video.data.title}`}>
              <svg width="68" height="48" viewBox="0 0 68 48">
                <path d="M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z" fill="#f00"></path>
                <path d="M 45,24 27,14 27,34" fill="#fff"></path>
              </svg>
            </button>
          </div>
          <figcaption>
            <a href={`https://www.youtube.com/watch?v=${video.data.videoId}`} target="_blank" rel="noopener noreferrer">
              {video.data.title}
            </a>
          </figcaption>
        </figure>
      ))}
    </div>
  </div>
)}

<script is:inline>
  // Lazy load YouTube videos when play button is clicked
  function initYoutubeVideos() {
    document.querySelectorAll('.video-container').forEach(container => {
      const playButton = container.querySelector('.play-button');
      const videoId = container.getAttribute('data-video-id');

      if (playButton && videoId) {
        playButton.addEventListener('click', () => {
          const iframe = document.createElement('iframe');
          iframe.setAttribute('src', `https://www.youtube.com/embed/${videoId}?autoplay=1`);
          iframe.setAttribute('frameborder', '0');
          iframe.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture');
          iframe.setAttribute('allowfullscreen', '');
          iframe.style.width = '100%';
          iframe.style.height = '100%';
          iframe.style.position = 'absolute';
          iframe.style.top = '0';
          iframe.style.left = '0';

          container.innerHTML = '';
          container.appendChild(iframe);
        });
      }
    });
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initYoutubeVideos);
  } else {
    initYoutubeVideos();
  }
</script>

