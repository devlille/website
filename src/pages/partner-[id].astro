---
import type { GetStaticPaths } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../layouts/Layout.astro";

const videos: Record<string, string> = {
  aGaY4K4bmCui5YwHAX1P: "NnqC0mDkmDI",
  nQ5LMHHfUnFZE85YdIOT: "7FPZqvYmdrA",
  IskRAkrAh5kHqOUc8TuF: "18kdzQ0sOF0",
  h5fEfoQf4jqXrQWbwD7v: "N53Ik0PvKYI",
  yE6KTKUWbzi1AmJEeTCo: "XTkTvysN6gQ",
  f7J4vkm24BaPxHPy7VJE: "QdTMvu3mAYE"
};
interface Props {
  sponsor: CollectionEntry<"sponsors">;
}

export const getStaticPaths = (async () => {
  const sponsors = await getCollection("sponsors");

  return sponsors.map((sponsor) => ({
    params: {
      id: sponsor.data.id,
    },
    props: {
      sponsor: sponsor,
    },
  }));
}) satisfies GetStaticPaths;

const { sponsor } = Astro.props;

const og = {
  ogDescription: sponsor.data.description?.replaceAll('"', "")?.trim(),
  ogUrl: "https://devlille.fr/partner-" + sponsor.data.id,
  ogImage: `https://devlille.fr/img/${sponsor.data.logoName}.${sponsor.data.ext}`,
};

const video = videos[sponsor.data.id] as string | undefined
---

<Layout title={sponsor.data.name} currSection="partners" og={og}>
  <div class="page-body list sponsor-sheet">
    <div class="h-group">
      <p class="sponsor">
        <a href={sponsor.data.siteUrl}>
          { sponsor.data.id === "T7YKXfMS1xm2gl4tr31Y" ?(<img
          loading="lazy"
          src={`/img/${sponsor.data.logoName}.png`}
          alt={`Logo de ${sponsor.data.name}`} 
        />)
         : (<img
            loading="lazy"
            src={`/img/sponsors/${sponsor.data.logoName}.${sponsor.data.ext}`}
            alt={`Logo de ${sponsor.data.name}`}
          />)}
        </a>
      </p>
      <h2>{sponsor.data.name}</h2>
    </div>

    <div class="speaker-sheet">
      <div class="speaker">
        {
          sponsor.data.description && (
            <div class="description">
              <p>
                {sponsor.data.description?.replaceAll('"', "")?.trim() ?? ""}
              </p>
            </div>
          )
        }
        <div class="online">
          <h3>Sur Internet</h3>
          <ul>
            {
              sponsor.data.twitterAccount && (
                <li>
                  <strong class="stressed">Sur X: </strong>
                  <a target="_blank" href={sponsor.data.twitterAccount}>
                    {sponsor.data.twitterAccount?.replace(
                      "https://twitter.com/",
                      ""
                    )}
                  </a>
                </li>
              )
            }
            {
              sponsor.data.linkedinAccount && (
                <li>
                  <strong class="stressed">Sur LinkedIn: </strong>
                  <a target="_blank" href={sponsor.data.linkedinAccount}>
                    {decodeURI(sponsor.data.linkedinAccount)
                      ?.replace("https://www.linkedin.com/in/", "")
                      ?.replace("https://www.linkedin.com/company/", "")
                      .replace("/", "")}
                  </a>
                </li>
              )
            }
            {
              sponsor.data.siteUrl && (
                <li>
                  <strong class="stressed">Site Web: </strong>
                  <a target="_blank" href={sponsor.data.siteUrl}>
                    {sponsor.data.siteUrl}
                  </a>
                </li>
              )
            }
          </ul>

          {
            video && (
              <>
                <link rel="stylesheet" href="/youtube/youtube.css" />
                <script is:inline src="/youtube/youtube.js" />
                <lite-youtube
                  videoid={video}
                  style=`background-image: url('https://i.ytimg.com/vi/${video}/hqdefault.jpg');`
                />
              </>
            )
          }
        </div>
        
        {
          (sponsor.data.jobs ?? []).length > 0 && (
            <div class="talk">
              <h3>Offres sur WeLoveDevs </h3>
              <p>
                <ul>
                  {sponsor.data.jobs
                    ?.map((job) => (
                      <li>
                        <a href={job.url}>{job.title}</a>
                      </li>
                    ))
                    .join("")}
                </ul>
              </p>
            </div>
          )
        }
      </div>
    </div>
  </div>
</Layout>
